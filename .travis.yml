language: shell

env:
  global:
    - DEPS="hyperspy>=1.6.0 diffsims lmfit pyfai ipywidgets"
    - TEST_DEPS="pytest>=5.0 pytest-cov>=2.8.1 coveralls>=1.10 coverage>=5.0"

matrix:
  include:
  - name: "Python 3.8 on Linux"
    env: export PYTHON=3.8
    before_install: wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh

  - name: "Python 3.7 on Linux"
    env: export PYTHON=3.7
    before_install: wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh

  - name: "Python 3.8 on MacOS"
    os: osx
    env: export PYTHON=3.8
    before_install: wget "https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh" -O miniconda.sh

  - name: "Python 3.7 on MacOS"
    os: osx
    env: export PYTHON=3.7
    before_install: wget "https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh" -O miniconda.sh

  - name: "Python 3.8 on Windows"
    os: windows
    env: EXPORT PYTHON=3.8; PATH="/c/tools/miniconda3/:/c/tools/miniconda3/Scripts:$PATH"
    before_install: choco install -y miniconda3 openssl.light

  - name: "Python 3.7 on Windows"
    os: windows
    env: EXPORT PYTHON=3.7; PATH="/c/tools/miniconda3/:/c/tools/miniconda3/Scripts:$PATH"
    before_install: choco install -y miniconda3 openssl.light

sudo: True #for Miniconda

install:
  # Completes the installation of miniconda
  - if [[ "$TRAVIS_OS_NAME" =~ ^(linux|osx)$ ]]; then
       chmod +x miniconda.sh;
       ./miniconda.sh -b -p $HOME/miniconda;
       source $HOME/miniconda/bin/activate root;
    fi
  # setup environment
  - conda update -y conda;
  - conda config --append channels conda-forge;
  - conda create -n testenv --yes python=$PYTHON;
  - if [[ "$TRAVIS_OS_NAME" =~ ^(linux|osx)$ ]]; then
      conda activate testenv;
    else
      . activate testenv;
    fi
  - conda activate testenv;
  - conda install -y $DEPS $TEST_DEPS;
  - pip install .

script:
  - export MPLBACKEND=Agg
  - pytest --pyargs pyxem --cov=pyxem
  - coveralls
